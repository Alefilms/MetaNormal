// main global script file

// called when the game starts, before the first room is loaded
function game_start() 
{
  BCerrarInventario.Visible = false;
}

// put anything you want to happen every game cycle in here
function repeatedly_execute() 
{
}

// put here anything you want to happen every game cycle, even when the game is blocked
function repeatedly_execute_always() 
{
}

// called when a key is pressed. keycode holds the key's ASCII code
function on_key_press(eKeyCode keycode) 
{
  if (IsGamePaused()) keycode = 0; // game paused, so don't react to keypresses
  
  if (keycode == eKeyCtrlQ) QuitGame(1); // Ctrl-Q
  if (keycode == eKeyF9) RestartGame(); // F9
  if (keycode == eKeyF12) SaveScreenShot("scrnshot.pcx");  // F12
  if (keycode == eKeyCtrlS) Debug(0,0); // Ctrl-S, give all inventory
  if (keycode == eKeyCtrlV) Debug(1,0); // Ctrl-V, version
  if (keycode == eKeyCtrlA) Debug(2,0); // Ctrl-A, show walkable areas
  if (keycode == eKeyCtrlX) Debug(3,0); // Ctrl-X, teleport to room
  // Abrir el menu aprentando Escape
  if (keycode == eKeyEscape)
  {
  
    int transMenu = gMenu.Transparency;
    int transFade =gFade.Transparency;
     if (gConfirmacionDeSalir.Visible == true)
       {
         gConfirmacionDeSalir.Visible = false;
       }
      
         // Hacer visible el menu----------------------
    else if ( gMenu.Visible == false)
    {
         mouse.Mode = eModePointer;
      gMenu.Visible = true;
      gFade.Visible = true;
        while (transMenu > 20 ) 
        {
            
          transMenu--;
          transFade--;
          gMenu.Transparency = transMenu;
          gFade.Transparency = transFade;
          Wait(1);
        }
    }
         // Hacer invisible el menu------------------------
      else if ( gMenu.Visible == true)
       {
          
     
        while (transMenu < 70 ) 
        {
          transMenu++;
          transFade++;
          gMenu.Transparency = transMenu;
          gFade.Transparency = transFade;
          Wait(1);
            if (transMenu == 70)
            {
              gMenu.Visible = false;
              gFade.Visible = false;
           mouse.Mode = eModeWalkto;
            }
        }
       }

   
  }

}

function on_mouse_click(MouseButton button) // called when a mouse button is clicked. button is either LEFT or RIGHT
{
  if (IsGamePaused() == 1) // Game is paused, so do nothing (ie. don't allow mouse click)
  {
  }
  else if (button == eMouseLeft) 
  {
    Room.ProcessClick(mouse.x,mouse.y, mouse.Mode);
  }
  else // right-click, so cycle cursor
  {   
    mouse.SelectNextMode();
  }
}


function dialog_request(int param) {
}

function Hablar (String Loquedice)
{
}
function HablarSantiago (String Loquedice)
{
}

function TalkDefault ()
{
}

function HablarCosa (String Loquedice)
{
  }

function BFlechaArriba_OnClick(GUIControl *control, MouseButton button)
{
InventoryWindow1.ScrollUp();
}

function BFlechaAbajo_OnClick(GUIControl *control, MouseButton button)
{
InventoryWindow1.ScrollDown();
}

function BAbrirInventario_OnClick(GUIControl *control, MouseButton button)
{
 if (gInventario.Visible == false)
 {
  gInventario.Visible = true;
  BAbrirInventario.Visible = false;
  BCerrarInventario.Visible = true;
 }
}

function BCerrarInventario_OnClick(GUIControl *control, MouseButton button)
{
if (gInventario.Visible == true)
 {
  gInventario.Visible = false;
  BCerrarInventario.Visible = false;
  BAbrirInventario.Visible = true;
 }

}

function BResumir_OnClick(GUIControl *control, MouseButton button)
{
  int transMenu = gMenu.Transparency;
  int transFade = gFade.Transparency; 
if ( gMenu.Visible == true)
       {
        while (transMenu < 70 ) 
        {
          transMenu++;
          transFade++;
          gMenu.Transparency = transMenu;
          gFade.Transparency = transFade;
          Wait(1);
            if (transMenu == 70)
            {
              gMenu.Visible = false;
              gFade.Visible = false;
            }
        }
       }
}


function BSi_OnClick(GUIControl *control, MouseButton button)
{
QuitGame(0);
}

function BNo_OnClick(GUIControl *control, MouseButton button)
{
gConfirmacionDeSalir.Visible = false;
}

function BSalir_OnClick(GUIControl *control, MouseButton button)
{
gConfirmacionDeSalir.Visible = true;
}
